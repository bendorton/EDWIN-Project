openapi: 3.0.1
info:
  description: API for the EDWIN Project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: EDWIN Backend API
  version: "1.1.0-oas3"
servers:
- url: https://127.0.0.1:3030/
tags:
- description: Operations relating to general front end calls and user information
  name: general
- description: Protected admin calls for creating, updating, deleting. Needs front
    end UI
  name: siteAdmin
- description: Protected admin calls for creating, updating deleting. No front end
  name: admin
- description: Operations relating to streams and the streaming server
  name: server
- description: Operations relating to alerts and the notification server
  name: notification
paths:
  /login:
    post:
      operationId: loginPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: not totally sure yet, probably encrypted username and password
        required: true
      responses:
        "200":
          description: Successfully logged in
        "401":
          description: Invalid login
        "405":
          description: Invalid input
      summary: login
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /user/admin:
    delete:
      operationId: userAdminDELETE
      parameters:
      - description: Numeric ID of the user to delete
        explode: true
        in: query
        name: userId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: Successfully deleted user
        "405":
          description: Invalid input
      summary: admin - delete user
      tags:
      - siteAdmin
      x-swagger-router-controller: SiteAdmin
      x-openapi-router-controller: SiteAdminController
      x-openapi-router-service: SiteAdminService
    post:
      operationId: userAdminPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        description: Person object to be added
        required: true
      responses:
        "200":
          description: Successfully created user
        "405":
          description: Invalid input
      summary: admin - create user
      tags:
      - siteAdmin
      x-swagger-router-controller: SiteAdmin
      x-openapi-router-controller: SiteAdminController
      x-openapi-router-service: SiteAdminService
    put:
      operationId: userAdminPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        description: Person object to be updated
        required: true
      responses:
        "200":
          description: Successfully updated user
        "405":
          description: Invalid input
      summary: admin - update user
      tags:
      - siteAdmin
      x-swagger-router-controller: SiteAdmin
      x-openapi-router-controller: SiteAdminController
      x-openapi-router-service: SiteAdminService
  /user/admin/{userId}:
    get:
      operationId: userAdminUserIdGET
      parameters:
      - description: ID of user to return
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Successfully returned user
        "400":
          description: bad input parameter
      summary: admin - get user
      tags:
      - siteAdmin
      x-swagger-router-controller: SiteAdmin
      x-openapi-router-controller: SiteAdminController
      x-openapi-router-service: SiteAdminService
  /user/admin/list/{groupId}:
    get:
      operationId: userAdminListGroupIdGET
      parameters:
      - description: group Id of user list
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/person'
                type: array
                x-content-type: application/json
          description: Successfully returned user list
        "400":
          description: bad input parameter
      summary: admin - get group user list
      tags:
      - siteAdmin
      x-swagger-router-controller: SiteAdmin
      x-openapi-router-controller: SiteAdminController
      x-openapi-router-service: SiteAdminService
  /user/{userId}:
    get:
      operationId: userUserIdGET
      parameters:
      - description: ID of user to return
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
          description: Successfully returned user
        "400":
          description: bad input parameter
      summary: get logged in user information
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
    put:
      operationId: userUserIdPUT
      parameters:
      - description: Person ID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        description: Updated Person Object
        required: true
      responses:
        "200":
          description: Successfully updated user
        "405":
          description: Invalid input
      summary: update logged in user
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /camera:
    delete:
      description: deletes camera object from database
      operationId: cameraDELETE
      parameters:
      - description: Numeric ID of the camera to delete
        explode: false
        in: query
        name: cameraId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: Successfully deleted camera
        "405":
          description: Invalid input
      summary: admin - delete camera
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
    post:
      operationId: cameraPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/camera'
        description: Camera object to be added
        required: true
      responses:
        "200":
          description: Successfully added camera
        "405":
          description: Invalid input
      summary: admin - create camera
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
    put:
      operationId: cameraPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/camera'
        description: camera to be updated
        required: true
      responses:
        "200":
          description: Successfully updated camera
        "405":
          description: Invalid input
      summary: admin - update camera
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
  /camera/list/{userId}:
    get:
      operationId: cameraListUserIdGET
      parameters:
      - description: user ID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/camera'
                type: array
                x-content-type: application/json
          description: Successfully returned camera list
        "400":
          description: bad input parameter
      summary: get a list of cameras user has permissions to see
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /camera/{cameraId}:
    get:
      operationId: cameraCameraIdGET
      parameters:
      - description: camera ID
        explode: false
        in: path
        name: cameraId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/camera'
          description: Successfully returned camera object
        "400":
          description: bad input parameter
      summary: get camera object
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /alert:
    post:
      operationId: alertPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert'
        description: alert object to be added
        required: true
      responses:
        "200":
          description: Successfully created alert
        "405":
          description: Invalid input
      summary: create alert
      tags:
      - notification
      x-swagger-router-controller: Notification
      x-openapi-router-controller: NotificationController
      x-openapi-router-service: NotificationService
    put:
      operationId: alertPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert'
        description: alert to be updated
        required: true
      responses:
        "200":
          description: Successfully updated alert
        "405":
          description: Invalid input
      summary: update alert
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /alert/list/{cameraId}:
    get:
      operationId: alertListCameraIdGET
      parameters:
      - description: camera ID
        explode: false
        in: path
        name: cameraId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/alert'
                type: array
                x-content-type: application/json
          description: Successfully returned alert list
        "400":
          description: bad input parameter
      summary: get list of alerts for camera
      tags:
      - general
      x-swagger-router-controller: General
      x-openapi-router-controller: GeneralController
      x-openapi-router-service: GeneralService
  /alert/emails/{cameraId}:
    get:
      operationId: alertEmailsCameraIdGET
      parameters:
      - description: camera ID
        explode: false
        in: path
        name: cameraId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                x-content-type: application/json
          description: Successfully returned email list
        "400":
          description: bad input parameter
      summary: get list of emails for camera alerts
      tags:
      - notification
      x-swagger-router-controller: Notification
      x-openapi-router-controller: NotificationController
      x-openapi-router-service: NotificationService
  /camera/get/ip:
    get:
      operationId: cameraGetbyipGET
      parameters:
      - description: IP address of camera
        explode: true
        in: query
        name: ipAddress
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/camera'
          description: Successfully returned camera object
        "400":
          description: bad input parameter
      summary: get camera by IP Address
      tags:
      - notification
      x-swagger-router-controller: Notification
      x-openapi-router-controller: NotificationController
      x-openapi-router-service: NotificationService
  /camerastream/get/{cameraId}:
    get:
      operationId: camerastreamCameraIdGET
      parameters:
      - description: ID of camera
        explode: false
        in: path
        name: cameraId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                x-content-type: application/json
          description: Successfully returned stream list
        "400":
          description: bad input parameter
      summary: get direct camera stream URLs
      tags:
      - server
      x-swagger-router-controller: Server
      x-openapi-router-controller: ServerController
      x-openapi-router-service: ServerService
  /camerastream/list:
    get:
      operationId: camerastreamListGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/camera'
                type: array
                x-content-type: application/json
          description: Successfully returned camera stream list
        "401":
          description: access denied
      summary: get list of cameras and their direct stream URLs
      tags:
      - server
      x-swagger-router-controller: Server
      x-openapi-router-controller: ServerController
      x-openapi-router-service: ServerService
  /group:
    delete:
      description: deletes group object from database
      operationId: groupDELETE
      parameters:
      - description: Numeric ID of the group to delete
        explode: false
        in: query
        name: groupId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: Successfully deleted group
        "405":
          description: Invalid input
      summary: admin - delete group
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
    post:
      operationId: groupPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
        description: group object to be added
        required: true
      responses:
        "200":
          description: Successfully added group
        "405":
          description: Invalid input
      summary: admin - create group
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
    put:
      operationId: groupPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
        description: group to be updated
        required: true
      responses:
        "200":
          description: Successfully updated group
        "405":
          description: Invalid input
      summary: admin - update group
      tags:
      - admin
      x-swagger-router-controller: Admin
      x-openapi-router-controller: AdminController
      x-openapi-router-service: AdminService
components:
  schemas:
    person:
      example:
        firstName: firstName
        lastName: lastName
        groups:
        - notification: true
          name: name
          id: 6
        - notification: true
          name: name
          id: 6
        id: 0
        email: ""
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        password:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/group'
          type: array
      required:
      - email
      type: object
    group:
      example:
        notification: true
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
        notification:
          type: boolean
      required:
      - id
      type: object
    camera:
      example:
        alerts:
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          alertType: High Temperature
          cameraId: 5
          filePath: filePath
          id: 1
          message: message
          status: active
        - timeStamp: 2000-01-23T04:56:07.000+00:00
          alertType: High Temperature
          cameraId: 5
          filePath: filePath
          id: 1
          message: message
          status: active
        groupId: 6
        streams:
        - streamType: HD
          id: 5
          url: url
        - streamType: HD
          id: 5
          url: url
        name: name
        coordinates: coordinates
        ipAddress: ipAddress
        id: 0
        status: good
      properties:
        id:
          type: integer
        name:
          type: string
        groupId:
          type: integer
        coordinates:
          type: string
        ipAddress:
          format: ipv4
          type: string
        status:
          $ref: '#/components/schemas/cameraStatusEnum'
        type:
          type: string
        alerts:
          items:
            $ref: '#/components/schemas/alert'
          type: array
        streams:
          items:
            $ref: '#/components/schemas/stream'
          type: array
      required:
      - name 
      - groupId 
      - coordinates 
      - ipAddress 
      - status
      type: object
    alert:
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        alertType: High Temperature
        cameraId: 5
        filePath: filePath
        id: 1
        message: message
        status: active
      properties:
        id:
          type: integer
        cameraId:
          type: integer
        status:
          $ref: '#/components/schemas/alertStatusEnum'
        alertType:
          $ref: '#/components/schemas/alertTypeEnum'
        message:
          type: string
        timeStamp:
          format: date-time
          type: string
        filePath:
          type: string
      required:
      - cameraId 
      - alertType 
      - filePath 
      - status
      type: object
    stream:
      example:
        streamType: HD
        id: 5
        url: url
      properties:
        id:
          type: integer
        url:
          type: string
        streamType:
          $ref: '#/components/schemas/streamTypeEnum'
      required:
      - id 
      - url 
      - streamType
      type: object
    alertTypeEnum:
      enum:
      - High Temperature
      - Rapid Rise in Temperature
      - Danger
      type: string
    alertStatusEnum:
      enum:
      - active
      - dismissed
      - deleted
      type: string
    cameraStatusEnum:
      enum:
      - good
      - offline
      - alert
      type: string
    streamTypeEnum:
      enum:
      - HD
      - Thermal
      type: string